library(boot)
Ad = read.csv('Advertising.csv', header = T)
Ad
Ad(1)
Ad$X
Ad$X(1)
Ad$X[1]
Ad$X[3]
Ad$X[222]
Ad$X[176]
??plot
?plot
plot(Ad$TV, Ad$sales)
plot(Ad$radio, Ad$sales)
Ad = read.csv('Advertising.csv', header = T)
par(mfrow=c(3,2))
plot(Ad$TV, Ad$sales, main = 'TV-sales')
plot(Ad$radio, Ad$sales, main = 'radio-sales')
par(mfrow=c(1,2))
plot(Ad$TV, Ad$sales, main = 'TV-sales')
plot(Ad$radio, Ad$sales, main = 'radio-sales')
singer = scan('singer.txt')
singer = read.delim('singer.txt', header = TRUE)
singer
singer = read.delim2('singer.txt', header = TRUE)
singer
singer = read.delim2('singer.txt')
singer = read.table('singer.txt', header = T, sep = ',')
singer$height
singer$voice.part
singer
singer[,which(singer$voice.part='Bass')]
singer[,which(singer$voice.part=='Bass')]
singer['height', which(singer$voice.part=='Bass')]
singer[1,]
singer[['height']]
singer[['height'], which(singer$voice.part=='Bass')]
singer[which(singer$voice.part=='Bass')]
singer[singer$voice.part=='Bass']
singer[,singer$voice.part=='Bass']
singer
head(singer)
str(singer)
singer[,'Bass']
singer[,]
singer[,singer$voice.part]
singer[,singer$voice.part=='Bass']
singer[,which(singer$voice.part=='Bass')]
summary(singer)
class(singer)
row.names(singer)
singer[：,which(singer$voice.part=='Bass')]
singer[:,which(singer$voice.part=='Bass')]
singer[which(singer$voice.part=='Bass'),]
singer[which(singer$voice.part=='Bass'),'height']
singer = read.table('singer.txt', header = T, sep = ',')
alto_height = singer[which(singer$voice.part=='Alto'), 'height']
bass_height = singer[which(singer$voice.part=='Bass'), 'height']
tenor_height = singer[which(singer$voice.part=='Tenor'), 'height']
soprano_height = singer[which(singer$voice.part=='Soprano'), 'height']
hist(alto_height)
par(mfrow=c(2,2))
hist(alto_height)
hist(bass_height)
hist(tenor_height)
hist(soprano_height)
mean(alto_height)
mean(soprano_height)
singer
boxplot(alto_height, bass_height, tenor_height, soprano_height)
?boxplot
mean(alto_height)
mean(soprano_height)
qqmath(~ height | voice.part,
data=singer,
aspect=1,
layout=c(2,4),
prepanel = prepanel.qqmathline,
panel = function(x, ...) {
panel.grid()
panel.qqmathline(x, ...)
panel.qqmath(x, ...)
},
xlab = "Unit Normal Quantile",
ylab="Height (inches)")
cor(Ad$TV, Ad$sales, use = "everything", method = c("pearson", "kendall", "spearman"))
cor(Ad$radio, Ad$sales, use = "everything", method = c("pearson", "kendall", "spearman"))
?cor
cor(Ad$TV, Ad$sales, use = "everything", method = c("pearson", "kendall", "spearman"))
cor(Ad$sales, Ad$TV, use = "everything", method = c("pearson", "kendall", "spearman"))
xy = data.frame(cbind(TV,sales))
TV = Advertising$TV
sales = Advertising$sales
n = length(TV)
library(boot)
# read data
Ad = read.csv('Advertising.csv', header = T)
# plot scatterplots
par(mfrow=c(1,2))
plot(Ad$TV, Ad$sales, main = 'TV-sales')
plot(Ad$radio, Ad$sales, main = 'radio-sales')
cor(Ad$TV, Ad$sales, use = "everything", method = c("pearson", "kendall", "spearman"))
cor(Ad$radio, Ad$sales, use = "everything", method = c("pearson", "kendall", "spearman"))
TV = Advertising$TV
TV = Ad$TV
sales = Ad$sales
n = length(TV)
Brep = 10000
xy = data.frame(cbind(TV,sales))
xy
Brep = 999
xy
xy[1,]
i
i=c(1:n)
i
d2=xy[i,]
d2
xy
TV_sales = data.frame(cbind(TV,sales))
?boot
# length of data
n = length(TV)
TV_sales = data.frame(cbind(TV,sales))
cor_func = function(d,i=c(1:n)){
d2 = d[i,]
return(cor(d2$TV,d2$sales))
}
bootcorr = boot(data = TV_sales,statistic=cor_func,R=999)
bootcorr
names(cor_func.boot)
cor_func.boot = boot(data = TV_sales,statistic=cor_func,R=999)
cor_func.boot = boot(data = TV_sales,statistic=cor_func,R=999)
names(cor_func.boot)
cor(Ad$TV, Ad$sales, use = "everything", method = c("pearson", "kendall", "spearman"))
boot.ci(cor_func.boot,conf=.95)
?boot.ci
boot.ci(boot.out=cor_func.boot)
boot.ci
boot.ci(boot.out=cor_func.boot)
library(boot)
# read data
Ad = read.csv('Advertising.csv', header = T)
# plot scatterplots
par(mfrow=c(1,2))
plot(Ad$TV, Ad$sales, main = 'TV-sales')
plot(Ad$radio, Ad$sales, main = 'radio-sales')
TV = Ad$TV
sales = Ad$sales
radio = Ad$radio
# length of data
n = length(TV)
TV_sales = data.frame(cbind(TV, sales))
radio_sales = data.frame(cbind(radio, sales))
TV.sales = function(d,i=c(1:n)){
d2 = d[i,]
return(cor(d2$TV,d2$sales))
}
radio.sales = function(d, i=c(1:n)){
d2 = d[i,]
return(cor(d2$sales, d2$radio))
}
TV.sales.boot = boot(data = TV_sales,statistic=TV.sales,R=999)
radio.sales.boot = boot(data = radio_sales,statistic=radio.sales,R=999)
boot.ci(boot.out=TV.sales.boot)
boot.ci(boot.out=radio.sales.boot)
cor(Ad$TV, Ad$sales, use = "everything", method = c("pearson", "kendall", "spearman"))
cor(Ad$radio, Ad$sales, use = "everything", method = c("pearson", "kendall", "spearman"))
TV.sales.boot
radio.sales.boot
singer = read.table('singer.txt', header = T, sep = ',')
alto_height = singer[which(singer$voice.part=='Alto'), 'height']
bass_height = singer[which(singer$voice.part=='Bass'), 'height']
tenor_height = singer[which(singer$voice.part=='Tenor'), 'height']
soprano_height = singer[which(singer$voice.part=='Soprano'), 'height']
par(mfrow=c(2,2))
hist(alto_height)
hist(bass_height)
hist(tenor_height)
hist(soprano_height)
par(mfrow=c(2,2))
hist(alto_height)
hist(bass_height)
hist(tenor_height)
hist(soprano_height)
par(mfrow=c(2,2))
qqplot(alto_height)
qqplot(alto_height)
qqnorm(alto_height, main = 'Alto')
qqline(alto_height)
qqnorm(bass_height, main = 'Bass')
qqline(bass_height)
qqnorm(tenor_height, main = 'Tenor')
qqline(tenor_height)
qqnorm(soprano_height, main = 'Soprano')
qqline(soprano_height)
?cor
?with
？t.test
?t.test
t.test(alto_height, soprano_height, alternative = "two.sided", conf.level = 0.95,
var.equal = FALSE)
var.equal = FALSE)
length(alto_height)
length(soprano_height)
par(mfrow=c(2,2))
hist(alto_height)
hist(bass_height)
hist(tenor_height)
hist(soprano_height)
